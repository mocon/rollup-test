!function(){"use strict";function e(e,n){if("undefined"==typeof document)return n;e=e||"";var r=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");return o.type="text/css",o.styleSheet?o.styleSheet.cssText=e:o.appendChild(document.createTextNode(e)),r.appendChild(o),n}function n(e,n){return n={exports:{}},e(n,n.exports),n.exports}function r(e){if(e=String(e),!(e.length>1e4)){var n=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(n){var r=parseFloat(n[1]),o=(n[2]||"ms").toLowerCase();switch(o){case"years":case"year":case"yrs":case"yr":case"y":return r*l;case"days":case"day":case"d":return r*u;case"hours":case"hour":case"hrs":case"hr":case"h":return r*i;case"minutes":case"minute":case"mins":case"min":case"m":return r*a;case"seconds":case"second":case"secs":case"sec":case"s":return r*c;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}function o(e){return e>=u?Math.round(e/u)+"d":e>=i?Math.round(e/i)+"h":e>=a?Math.round(e/a)+"m":e>=c?Math.round(e/c)+"s":e+"ms"}function t(e){return s(e,u,"day")||s(e,i,"hour")||s(e,a,"minute")||s(e,c,"second")||e+" ms"}function s(e,n,r){if(!(e<n))return e<1.5*n?Math.floor(e/n)+" "+r:Math.ceil(e/n)+" "+r+"s"}e("body{color:#add8e6}body a{text-decoration:none}body a:hover{color:#add8e6}",void 0);var c=1e3,a=60*c,i=60*a,u=24*i,l=365.25*u,d=function(e,n){n=n||{};var s=typeof e;if("string"===s&&e.length>0)return r(e);if("number"===s&&isNaN(e)===!1)return n.long?t(e):o(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))},f=n(function(e,n){function r(){return n.colors[u++%n.colors.length]}function o(e){function o(){}function t(){var e=t,o=+new Date,s=o-(i||o);e.diff=s,e.prev=i,e.curr=o,i=o,null==e.useColors&&(e.useColors=n.useColors()),null==e.color&&e.useColors&&(e.color=r());for(var c=new Array(arguments.length),a=0;a<c.length;a++)c[a]=arguments[a];c[0]=n.coerce(c[0]),"string"!=typeof c[0]&&(c=["%o"].concat(c));var u=0;c[0]=c[0].replace(/%([a-z%])/g,function(r,o){if("%%"===r)return r;u++;var t=n.formatters[o];if("function"==typeof t){var s=c[u];r=t.call(e,s),c.splice(u,1),u--}return r}),c=n.formatArgs.apply(e,c);var l=t.log||n.log||console.log.bind(console);l.apply(e,c)}o.enabled=!1,t.enabled=!0;var s=n.enabled(e)?t:o;return s.namespace=e,s}function t(e){n.save(e);for(var r=(e||"").split(/[\s,]+/),o=r.length,t=0;t<o;t++)r[t]&&(e=r[t].replace(/[\\^$+?.()|[\]{}]/g,"\\$&").replace(/\*/g,".*?"),"-"===e[0]?n.skips.push(new RegExp("^"+e.substr(1)+"$")):n.names.push(new RegExp("^"+e+"$")))}function s(){n.enable("")}function c(e){var r,o;for(r=0,o=n.skips.length;r<o;r++)if(n.skips[r].test(e))return!1;for(r=0,o=n.names.length;r<o;r++)if(n.names[r].test(e))return!0;return!1}function a(e){return e instanceof Error?e.stack||e.message:e}n=e.exports=o.debug=o,n.coerce=a,n.disable=s,n.enable=t,n.enabled=c,n.humanize=d,n.names=[],n.skips=[],n.formatters={};var i,u=0}),p=n(function(e,n){function r(){return"undefined"!=typeof document&&"WebkitAppearance"in document.documentElement.style||window.console&&(console.firebug||console.exception&&console.table)||navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31}function o(){var e=arguments,r=this.useColors;if(e[0]=(r?"%c":"")+this.namespace+(r?" %c":" ")+e[0]+(r?"%c ":" ")+"+"+n.humanize(this.diff),!r)return e;var o="color: "+this.color;e=[e[0],o,"color: inherit"].concat(Array.prototype.slice.call(e,1));var t=0,s=0;return e[0].replace(/%[a-z%]/g,function(e){"%%"!==e&&(t++,"%c"===e&&(s=t))}),e.splice(s,0,o),e}function t(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function s(e){try{null==e?n.storage.removeItem("debug"):n.storage.debug=e}catch(e){}}function c(){var e;try{e=n.storage.debug}catch(e){}return"env"in("undefined"==typeof process?{}:process)&&(e=process.env.DEBUG),e}function a(){try{return window.localStorage}catch(e){}}n=e.exports=f,n.log=t,n.formatArgs=o,n.save=s,n.load=c,n.useColors=r,n.storage="undefined"!=typeof chrome&&"undefined"!=typeof chrome.storage?chrome.storage.local:a(),n.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],n.formatters.j=function(e){return JSON.stringify(e)},n.enable(c())}),m=p("app:log");p.disable(),m("Testing")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
